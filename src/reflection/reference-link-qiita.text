# Qiitaの参照リンク一覧

1.
【TypeScript】Pick<T, K>の自作（type-challenges 初級編 4・Pick）
https://qiita.com/yuto99999/items/dcc234f3e25a5393a2ab

ユーティリティ型, extends, keyof演算子, Mapped Types, インデックスアクセス型

2.
【TypeScript】Readonly<T>の自作（type-challenges 初級編 7・Readonly）
https://qiita.com/yuto99999/items/63956cda534df8706bc1

Readonly<T>, readonly修飾子

3.
【TypeScript】タプルからオブジェクトを生成（type-challenges 初級編 11・Tuple to Object）
https://qiita.com/yuto99999/items/44161921ff23a149cba5

タプルとは, constアサーション（as const）, typeof, [number]

4.
【TypeScript】配列の最初の要素を返す型の実装（type-challenges 初級編 14・First of Array）
https://qiita.com/yuto99999/items/057e28323118c4ac5de0

Conditional Types, infer, 残余パターン(...)
なぜ型推論をして、具体的な値（"a"や0）を抽出できるのか？

5.
【TypeScript】タプルの長さを返す型の実装（type-challenges 初級編 18・Length of Tuple）
https://qiita.com/yuto99999/items/a147dd93e4fc65a8208d

配列型の要素の数を取得, ["length"]

6.
【TypeScript】Exclude<T, U>の自作（type-challenges 初級編 43・Exclude）
https://qiita.com/yuto99999/items/3e219b864dab956504ef

Exclude<T, U>
ユニオン型の条件分岐の場合に何が起こる？

7.
【TypeScript】Awaited<T>の自作（type-challenges 初級編 189・Awaited）
https://qiita.com/yuto99999/items/b66b597bf61e47e126fe

PrmosieLikeな型

8.
【TypeScript】条件値によって戻り値を切り替える型の実装（type-challenges 初級編 268•if）
https://qiita.com/yuto99999/items/34e46438f71dc155d70c

条件値がbooleanの場合、なぜユニオン型が返されるのか？

9.
【TypeScript】配列同士を結合する型の実装（type-challenges 初級編 533・Concat）
https://qiita.com/yuto99999/items/f77e22e0a1e80b867ee5

Array.concat(), スプレッド構文（…）

10.
【TypeScript】type-challenges 初級編 898・Includes 解説
https://qiita.com/yuto99999/items/ea23c998dc891475ce3d

なぜ下記のコードでは期待した結果が得られないのか？

11.
【TypeScript】type-challenges 初級編 3057・push 解説
https://qiita.com/yuto99999/items/cf8ed2af9a6212b433ed

配列型の注意点

12.
【TypeScript】type-challenges 初級編 3060・Unshift 解説
https://qiita.com/yuto99999/items/9bc151905a03808754f9

13. 
【TypeScript】type-challenges 初級編 3312・Parameters 解説
https://qiita.com/yuto99999/items/5f18cf1697d6c8e09349

関数の型宣言, 残余引数, 関数から関数の型を宣言

14.
【TypeScript】type-challenges 中級編 2・Get Return Type 解説
https://qiita.com/yuto99999/items/4ace37d25df502048f7c

12の解説記事を確認

15. 
【TypeScript】type-challenges 中級編 3・Omit 解説
https://qiita.com/yuto99999/items/8557d13e24cd132f6ef2

Omit, Mapped Typesにおけるas

16.
【TypeScript】type-challenges 中級編 8・Readonly 2 解説
https://qiita.com/yuto99999/items/18f696f15887a02897f8

default value, インターセクション型

17.
【TypeScript】type-challenges 中級編 9・Deep Readonly 解説
https://qiita.com/yuto99999/items/e93c1d52c99e80c32572